name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set output tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Release ${{ steps.vars.outputs.tag }} of crypt4gh GUI (Graphical User Interface).

  build_release:
    name: Upload Release Asset
    needs: create_release
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: crypt4gh-gui
            os_suffix: linux-amd64
            asset_name: crypt4gh-gui
          - os: windows-latest
            artifact_name: crypt4gh-gui.exe
            os_suffix: windows-amd64
            asset_name: crypt4gh-gui
          - os: macos-latest
            artifact_name: crypt4gh-gui
            os_suffix: macos-amd64
            asset_name: crypt4gh-gui
        python-version: [3.8]
    
    runs-on: ${{ matrix.os }}
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install python3-dev -y
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install zip
      - name: Install macOS dependencies
        if: matrix.os == 'macOS-latest'
        run: |
          brew install coreutils
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build GUI artifact Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
          docker pull cscfi/pyinstaller
          docker run --rm -v "${PWD}:/builder" cscfi/pyinstaller --noconsole --onefile crypt4gh_gui.py --name ${{ matrix.asset_name }}
          sudo chown -R $USER:$GROUP dist/
      - name: Build artifact 
        if: matrix.os != 'ubuntu-latest'
        run: |
          pyinstaller --noconsole --onefile crypt4gh_gui.py --name ${{ matrix.asset_name }}
      - name: Build Asset
        run: |
          cd ./dist
          zip --junk-paths ${{ matrix.asset_name }}-python${{ matrix.python-version }}-${{ matrix.os_suffix }}.zip ${{ matrix.artifact_name }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./dist/${{ matrix.asset_name }}-python${{ matrix.python-version }}-${{ matrix.os_suffix }}.zip
          fail_on_unmatched_files: true
